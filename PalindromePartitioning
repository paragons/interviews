#include <iostream>
#include<bits/stdc++.h>
using namespace std;
int main(){
	string s;
	cin>>s;
	int dp[50][50];
	memset(dp,0,sizeof(dp));
	int n=s.length();
	for(int len=1;len<=n;len++){
		for(int i=0;i<=n-len;i++){
			int j=i+len-1;
			if(i==j){
				dp[i][j]=1;
			}
			else if(j==i+1){
				if(s[j]==s[i])
					dp[i][j]=1;
			}
			else{
				if(s[j]==s[i]){
					dp[i][j] = dp[i+1][j-1];
				}
			}
		}
	}
	int mincut[50];
	memset(mincut,0,sizeof(mincut));
	int bckptr[50];
	memset(bckptr,0,sizeof(bckptr));
	for(int i=1;i<n;i++){
		if(dp[0][i]!=1){
			mincut[i]=INT_MAX;
			for(int j=0;j<i;j++){
				if(dp[j+1][i]==1 and mincut[i]>1+mincut[j]){
					mincut[i] = mincut[j]+1;
					bckptr[i] = j;
				}
			}
		}
		else{
			bckptr[i]=i;
		}
	}
	for(int i=0;i<n;i++)
		cout<<mincut[i]<<endl;
	stack<int> v;
	int k=n-1;
	v.push(n-1);
	while(bckptr[k]!=k){
		v.push(bckptr[k]);
		k = bckptr[k];
	}
	if(v.empty()){
		cout<<s<<endl;
		return 0;
	}
	string res="";
	int prev=0;
	while(!v.empty()){
		int z = v.top();
		v.pop();
		res = res + string(s.begin()+prev,s.begin()+z+1);
		res+='|';
		prev = z+1;
	}
	cout<<res<<endl;
}
