#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int oper(bool a,bool b,char op){
	if(op=='&')
		return a&b;
	if(op=='|')
		return a|b;
	if(op=='^')
		return a^b;
}
int main() {
	// your code goes here
	int n;
	cin>>n;
	int numT[n][n],numF[n][n];
	memset(numT,0,sizeof(numT));
	memset(numF,0,sizeof(numT));
	char op[n-1];
	bool x[n];
	char c;
	for(int i=0;i<n;i++)
		{cin>>c;x[i] = (c=='T'?true:false);}
	for(int i=0;i<n-1;i++)
		cin>>op[i];
	for(int len=1;len<=n;len++){
		for(int i=0;i<=n-len;i++){
			int j = i+len-1;
			if(len==1){
				numT[i][j]= (x[i]==true? 1: 0);
				numF[i][j] = 1-numT[i][j];
				
			}
			else if(len==2){
				numT[i][j] = oper(x[i],x[j],op[i]);
				numF[i][j] = 1-numT[i][j];
			}
			else{
				for(int k=i;k<j;k++){
					if(op[k]=='&'){
						numT[i][j]+= numT[i][k]*numT[k+1][j];		
						numF[i][j]+= (numT[i][k]*numF[k+1][j] + numF[i][k]*numT[k+1][j] + numF[i][k]*numF[k+1][j]);
					}
					else if(op[k]=='|'){
						numT[i][j]+= (numT[i][k]*numT[k+1][j] + numF[i][k]*numT[k+1][j] + numT[i][k]*numF[k+1][j]);
						numF[i][j]+= numF[i][k]*numF[k+1][j];
					}
					else{
						numT[i][j]+= (numT[i][k]*numF[k+1][j] + numF[i][k]*numT[k+1][j]);
						numF[i][j]+= (numT[i][k]*numT[k+1][j] + numF[i][k]*numF[k+1][j]);
					}
				}
			}
		}
	}
	cout<<numT[0][n-1]<<endl;
}
